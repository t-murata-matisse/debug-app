export const answerData = [
  {
    page: 1,
    procedure: "データ取得ボタン押下時",
    endpoint: "/api/v1/debug/fetch/aaaaa",
    statusCode: "500 Internal Server Error",
    cause: ["対象のデータを返却するAPIで何らかの不具合が生じている"],
    solution: ["対象のAPIの処理を修正する"],
  },
  {
    page: 2,
    procedure: "送信ボタン押下時",
    endpoint: "/api/v1/debug/post/aaaaa",
    statusCode: "400 Bad Request",
    cause: [
      "①クライアントからのデータ登録時のリクエストが間違っている",
      "②サーバー側で想定しているリクエストが間違っている",
    ],
    solution: [
      "①②のいずれかに応じてリクエストの内容を確認し、間違っている側を修正する",
    ],
  },
  {
    page: 3,
    procedure: "管理者専用画面へ遷移ボタン押下時",
    endpoint: "/api/v1/debug/post/ccccc",
    statusCode: "403 Forbidden",
    cause: [
      "①本来管理者権限を持つユーザーなのであれば権限付与処理が間違っている可能性がある",
      "②元々管理者権限を持たないユーザーである",
    ],
    solution: [
      "①なら権限付与処理を調査して修正する",
      "②なら想定通りのため対応は不要",
    ],
  },
  {
    page: 4,
    procedure: "送信ボタン押下時",
    endpoint: "/api/v1/debug/post/bbbbb",
    statusCode: "400 Bad Request",
    cause: [
      "①クライアントからのデータ登録時のリクエストが間違っている",
      "②サーバー側で想定しているリクエストが間違っている",
    ],
    solution: [
      "①②のいずれかに応じてリクエストの内容を確認し、間違っている側を修正する",
    ],
  },
  {
    page: 5,
    procedure: "送信ボタン押下時",
    endpoint: "/api/v1/debug/post/ddddd",
    statusCode: "404 Not Found",
    cause: [
      "①クライアントからのデータ登録時のリクエストが間違っている",
      "②サーバー側で想定しているリクエストが間違っている",
      "③サーバー側の処理が間違っている",
    ],
    solution: [
      "①②ならいずれかに応じてリクエストの内容を確認して間違っている側を修正する",
      "③なら対象のAPIの処理を修正する",
    ],
  },
  {
    page: 6,
    procedure: "送信ボタン押下時",
    endpoint: "/api/v1/debug/post/eeeee",
    statusCode: "408 Request Timeout",
    cause: [
      "①クライアントからのデータ登録に時間がかかりすぎている",
      "②サーバー側で設定しているタイムアウトまでの時間が処理にかかりそうな時間に対して短すぎる",
    ],
    solution: [
      "①ならクライアントの処理やネットワーク環境を確認して状態に応じた対応をする",
      "②ならサーバー側のタイムアウト時間を調整する",
    ],
  },
  {
    page: 7,
    procedure: "詳細情報を取得ボタン押下時",
    endpoint: "/api/v1/debug/fetch/${userId}",
    statusCode: "成功するものは200 OK",
    cause: ["特定のユーザーの詳細取得で引数の解析に失敗する"],
    solution: ["詳細情報取得処理を修正する"],
  },
  {
    page: 8,
    procedure: "リスト取得APIをコールボタン押下時",
    endpoint: "/api/v1/debug/fetch/ddddd",
    statusCode: "401 Unauthorized",
    cause: ["対象のAPIにアクセスする際の認証情報が不足している"],
    solution: ["対象のAPIの認証処理を修正する"],
  },
  {
    page: 9,
    procedure: "詳細情報画面へ遷移ボタン押下時",
    endpoint: "なし",
    statusCode: "なし",
    cause: ["画面遷移処理で設定しているURLが間違っている"],
    solution: ["画面遷移処理で設定しているURLを確認して、正しいURLを設定する"],
  },
  {
    page: 10,
    procedure: "画像データ取得ボタン押下時",
    endpoint: "/api/v1/debug/fetch/bbbbb",
    statusCode: "502 Bad Gateway",
    cause: ["AWSのEC2インスタンスが停止している"],
    solution: ["インフラ側の対応者へ問い合わせて状況を確認する"],
  },
  {
    page: 11,
    procedure: "送信ボタン押下時",
    endpoint: "なし",
    statusCode: "なし",
    cause: ["データの登録処理で引数の設定が間違っている"],
    solution: ["登録処理で正しい引数を設定する"],
  },
  {
    page: 12,
    procedure: "送信ボタン押下時",
    endpoint: "/api/v1/debug/post/fffff",
    statusCode: "504 Gateway Timeout",
    cause: ["サーバーの処理で時間がかかりすぎている"],
    solution: ["サーバーの処理時間やタイムアウトまでの時間を見直して調整する"],
  },
  {
    page: 13,
    procedure: "ユーザーLのカード押下時",
    endpoint: "なし",
    statusCode: "なし",
    cause: ["特定のユーザーの情報表示時にエラーが発生する"],
    solution: ["対象のコード周りを確認し、エラーの原因を特定して修正する"],
  },
  {
    page: 14,
    procedure: "エクセルファイル取得ボタン押下時",
    endpoint: "/api/v1/debug/fetch/ccccc",
    statusCode: "503 Service Unavailable",
    cause: ["サーバーがメンテナンス中"],
    solution: [
      "想定外のエラーであればサーバーの状態を確認する、想定通りのメンテナンスであれば対応は不要",
    ],
  },
  {
    page: 15,
    procedure: "6以降のページネーションボタン押下時",
    endpoint: "/api/v1/debug/fetch/users?page=${page}",
    statusCode: "404 Not Found",
    cause: [
      "①クライアントで設定するページネーションの上限が間違っている",
      "②サーバー側から返すユーザーのデータが不足している",
    ],
    solution: [
      "ページネーションの上限はサーバー側から渡すように修正し、その値をクライアント側で上限として設定する",
    ],
  },
  {
    page: 16,
    procedure: "登録ボタン押下時",
    endpoint: "/api/v1/debug/delete/aaaaa",
    statusCode: "400 Bad Request",
    cause: ["クライアントからのリクエストメソッドがDELETEになっている"],
    solution: ["クライアントのリクエストメソッドをPOSTへ修正する"],
  },
  {
    page: 17,
    procedure: "ユーザーDのinputに入力時",
    endpoint: "/api/v1/debug/post/age/${userId}",
    statusCode: "500 Internal Server Error",
    cause: [
      "①クライアントからユーザーDのageが文字でpostされる",
      "②サーバー側でageの型チェックが抜けており、500エラーが発生する",
    ],
    solution: [
      "①クライアント側でageを数値型で送信するように修正する",
      "②サーバー側でageの型チェックを実装して、型が違った場合は400エラーを返す",
      "※ ①②は両方の修正が必要",
    ],
  },
  {
    page: 18,
    procedure: "グラフデータ取得のボタン押下時",
    endpoint: "/api/v1/debug/fetch/graph/${graphType}",
    statusCode: "500 Internal Server Error",
    cause: [
      "①グラフデータを取得している最中に取得のボタンをクリックできてしまう",
      "②グラフデータ取得APIの処理が重いため、片方のリクエスト中にもう片方のリクエストを送信するとエラーが発生する",
    ],
    solution: [
      "①グラフデータを取得している最中は取得のボタンを非活性にしてクリックできないようにする",
      "②グラフデータ取得APIの処理を修正する",
      "※ ①②は両方の修正が必要",
    ],
  },
];
